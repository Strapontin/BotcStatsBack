// <auto-generated />
using System;
using BotcRoles.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BotcRoles.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20240104111143_Rename_Storyteller")]
    partial class Rename_Storyteller
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BotcRoles.Models.DemonBluff", b =>
                {
                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("GameId")
                        .HasColumnType("bigint");

                    b.HasKey("RoleId", "GameId");

                    b.HasIndex("GameId");

                    b.HasIndex("RoleId", "GameId")
                        .IsUnique();

                    b.ToTable("DemonBluffs");
                });

            modelBuilder.Entity("BotcRoles.Models.Edition", b =>
                {
                    b.Property<long>("EditionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("EditionId"));

                    b.Property<int>("IsHidden")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("EditionId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Editions");
                });

            modelBuilder.Entity("BotcRoles.Models.Game", b =>
                {
                    b.Property<long>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("GameId"));

                    b.Property<string>("DateCreated")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DatePlayed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("EditionId")
                        .HasColumnType("bigint");

                    b.Property<int>("IsHidden")
                        .HasColumnType("integer");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<long>("StorytellerId")
                        .HasColumnType("bigint");

                    b.Property<int>("WinningAlignment")
                        .HasColumnType("integer");

                    b.HasKey("GameId");

                    b.HasIndex("EditionId");

                    b.HasIndex("StorytellerId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("BotcRoles.Models.Player", b =>
                {
                    b.Property<long>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlayerId"));

                    b.Property<int>("IsHidden")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pseudo")
                        .HasColumnType("text");

                    b.HasKey("PlayerId");

                    b.HasIndex("Name", "Pseudo")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("BotcRoles.Models.PlayerRoleGame", b =>
                {
                    b.Property<long>("PlayerRoleGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PlayerRoleGameId"));

                    b.Property<int>("FinalAlignment")
                        .HasColumnType("integer");

                    b.Property<long>("GameId")
                        .HasColumnType("bigint");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("PlayerRoleGameId");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("RoleId");

                    b.ToTable("PlayerRoleGames");
                });

            modelBuilder.Entity("BotcRoles.Models.Role", b =>
                {
                    b.Property<long>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("RoleId"));

                    b.Property<int>("CharacterType")
                        .HasColumnType("integer");

                    b.Property<int>("IsHidden")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RoleId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BotcRoles.Models.RoleEdition", b =>
                {
                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("EditionId")
                        .HasColumnType("bigint");

                    b.HasKey("RoleId", "EditionId");

                    b.HasIndex("EditionId");

                    b.HasIndex("RoleId", "EditionId")
                        .IsUnique();

                    b.ToTable("RolesEdition");
                });

            modelBuilder.Entity("BotcRoles.Models.DemonBluff", b =>
                {
                    b.HasOne("BotcRoles.Models.Game", "Game")
                        .WithMany("DemonBluffs")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BotcRoles.Models.Role", "Role")
                        .WithMany("DemonBluffs")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BotcRoles.Models.Game", b =>
                {
                    b.HasOne("BotcRoles.Models.Edition", "Edition")
                        .WithMany("Games")
                        .HasForeignKey("EditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BotcRoles.Models.Player", "Storyteller")
                        .WithMany("GamesStoryTelling")
                        .HasForeignKey("StorytellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Edition");

                    b.Navigation("Storyteller");
                });

            modelBuilder.Entity("BotcRoles.Models.PlayerRoleGame", b =>
                {
                    b.HasOne("BotcRoles.Models.Game", "Game")
                        .WithMany("PlayerRoleGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BotcRoles.Models.Player", "Player")
                        .WithMany("PlayerRoleGames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BotcRoles.Models.Role", "Role")
                        .WithMany("PlayerRoleGames")
                        .HasForeignKey("RoleId");

                    b.Navigation("Game");

                    b.Navigation("Player");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BotcRoles.Models.RoleEdition", b =>
                {
                    b.HasOne("BotcRoles.Models.Edition", "Edition")
                        .WithMany("RolesEdition")
                        .HasForeignKey("EditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BotcRoles.Models.Role", "Role")
                        .WithMany("RolesEdition")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Edition");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BotcRoles.Models.Edition", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("RolesEdition");
                });

            modelBuilder.Entity("BotcRoles.Models.Game", b =>
                {
                    b.Navigation("DemonBluffs");

                    b.Navigation("PlayerRoleGames");
                });

            modelBuilder.Entity("BotcRoles.Models.Player", b =>
                {
                    b.Navigation("GamesStoryTelling");

                    b.Navigation("PlayerRoleGames");
                });

            modelBuilder.Entity("BotcRoles.Models.Role", b =>
                {
                    b.Navigation("DemonBluffs");

                    b.Navigation("PlayerRoleGames");

                    b.Navigation("RolesEdition");
                });
#pragma warning restore 612, 618
        }
    }
}
